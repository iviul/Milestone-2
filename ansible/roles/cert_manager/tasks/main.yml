---
- name: Include task install Helm
  ansible.builtin.include_tasks:
    file: install_helm.yml

- name: "Create namespace for Cert-Manager"
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: "{{ cert_manager_namespace }}"
    state: present
    kubeconfig: "{{ kubeconfig_path }}"
  become: true
  delegate_to: k3s-node-1
  tags:
    - certmanager
    - create_ns

- name: "Apply Cert-Manager CRDs "
  become: true
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('url', cert_manager_crds_url) }}"
    kubeconfig: "{{ kubeconfig_path }}"
  when: inventory_hostname == groups['k3s_control_plane'][0]
  tags:
    - certmanager
    - apply_crds

- name: "Add Helm repo"
  become: true
  kubernetes.core.helm_repository:
    name: "{{ helm_repo_name }}"
    repo_url: "{{ helm_repo_url }}"
    state: present
  tags:
    - certmanager
    - add_helm_repo

- name: "Update Helm repositories"
  become: true
  ansible.builtin.command:
    cmd: helm repo update
  environment:
    KUBECONFIG: "{{ kubeconfig_path }}"
  tags:
    - certmanager
    - helm_repo_update

- name: "Install Cert-Manager chart {{ cert_manager_helm_chart_name }}"
  become: true
  kubernetes.core.helm:
    release_name: "{{ cert_manager_release_name }}"
    chart_ref: "{{ helm_chart_name }}"
    chart_version: "{{ cert_manager_version }}"
    release_namespace: "{{ cert_manager_namespace }}"
    create_namespace: false
    kubeconfig: "{{ kubeconfig_path }}"
    values:
      installCRDs: true
    state: present
    reset_values: true
  run_once: true
  delegate_to: k3s-node-1
  tags:
    - certmanager
    - install_certmanager

- name: "Create ClusterIssuer {{ cluster_issuer_name }}"
  become: true
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: cert-manager.io/v1
      kind: ClusterIssuer
      metadata:
        name: "{{ cluster_issuer_name }}"
      spec:
        acme:
          email: "{{ cert_manager_acme_email }}"
          server: "{{ cert_manager_server }}"
          privateKeySecretRef:
            name: "{{ cluster_issuer_name }}-key"
          solvers:
            - http01:
                ingress:
                  class: nginx
    kubeconfig: "{{ kubeconfig_path }}"
  tags:
    - certmanager
    - create_clusterissuer

- name: Include Certificate creation tasks
  ansible.builtin.import_tasks: create_certificate.yml
